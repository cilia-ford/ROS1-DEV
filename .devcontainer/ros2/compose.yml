services:
  ros-dev:
    # image: rishikesavanramesh/ros2-dev # change this to your docker image
    # image: localhost/ros2_ros-dev # change this to your docker image
    build: 
      context: .
      args:
        ROS_DISTRO: ${ROS_DISTRO:-noetic}  # You can pass ROS_DISTRO as an environment variable
        USERNAME: ${USERNAME:-developer}      # Pass the username
        GROUPNAME: ${GROUPNAME:-developer}    # Pass the group name
        GROUP_GID: ${GROUP_GID:-1000}    # Pass the group GID
        USER_UID: ${USER_UID:-1000}      # Pass the user UID
    volumes:
      - ../../.:/workspace/.:rw

      - ../../.scripts/config/rsyslog/ros2-logging.conf:/etc/rsyslog.d/ros2-logging.conf
      - ../../.scripts/config/rsyslog/ros2-test.conf:/etc/rsyslog.d/ros2-test.conf
      - /dev/:/dev/
      - /tmp/.X11-unix:/tmp/.X11-unix # Expose X11 socket
      # - /dev/ttyACM0:/dev/ttyACM0
    environment:
      - ROS_DOMAIN_ID=3
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - DISPLAY=:45 # ( see https://gist.github.com/RishikesavanRamesh/d8c085c958bc11e8562cd3db297e4eb8 )

    command: sleep infinity
    user: ${USERNAME}
    # network_mode: host
    
    # ipc: host
    # pid: host

    privileged: true
    # security_opt: # strictly for developement 
    #   - seccomp:unconfined
    cap_add: # strictly for developement 
      # - SYS_PTRACE
      - all

    # devices:
    #   - /dev:/dev    (for easy hot plugging use volumes instead)

    # device_cgroup_rules: # (ref https://www.kernel.org/doc/Documentation/admin-guide/devices.txt )
    #   - 'c 13:* rwm'  # Input core ( eg : joystick)
    #   - 'c 166:* rwm' # ACM USB modems 
    #   - 'c 167:* rwm'   # & its alternate devices
    #   - 'c 188:* rwm' # USB serial converters 
    #   - 'c 189:* rwm'   # 1& its alternate devices    
  #   depends_on:
  #     - fluentbit
  #     - zenoh

  # fluentbit:
  #   image: cr.fluentbit.io/fluent/fluent-bit
  #   command: -c /conf/fluent-bit.conf
  #   volumes:
  #     - ../../.scripts/config/fluentbit:/conf

  zenoh:
    image: eclipse/zenoh-bridge-ros2dds
    environment:
      - ROS_DISTRO=humble
    network_mode: host
    command: -c /conf/zenoh.json5
    volumes:
      - ../../.scripts/config/zenoh:/conf

